/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Sistema_usuarios;


import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author LENOVO
 */
public class ver_Registros extends javax.swing.JInternalFrame {

    /**
     * Creates new form ver_Registros
     */
    public ver_Registros() {
        initComponents();
        txt_id.setVisible(false);
         try {
            Class.forName("com.mysql.jdbc.Driver");
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(usuarios.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDesktopPane1 = new javax.swing.JDesktopPane();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tb_registros = new javax.swing.JTable();
        bt_actualizardatos = new javax.swing.JButton();
        bt_eliminar = new javax.swing.JButton();
        txt_id = new javax.swing.JTextField();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Registros");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setFont(new java.awt.Font("Dutch801 XBd BT", 3, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 0, 0));
        jLabel1.setText("REGISTROS");

        tb_registros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "id", "Apellidos", "Nombres", "Pago/H", "Horas/T", "EstadoC", "FechaR", "Sueldo B.", "D_SNP", "sueldo neto"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tb_registros.setToolTipText("");
        jScrollPane1.setViewportView(tb_registros);

        bt_actualizardatos.setText("Actualizar Registros");
        bt_actualizardatos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_actualizardatosActionPerformed(evt);
            }
        });

        bt_eliminar.setText("Eliminar");
        bt_eliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_eliminarActionPerformed(evt);
            }
        });

        txt_id.setEnabled(false);
        txt_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_idActionPerformed(evt);
            }
        });

        jDesktopPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(jScrollPane1, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(bt_actualizardatos, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(bt_eliminar, javax.swing.JLayeredPane.DEFAULT_LAYER);
        jDesktopPane1.setLayer(txt_id, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jDesktopPane1Layout = new javax.swing.GroupLayout(jDesktopPane1);
        jDesktopPane1.setLayout(jDesktopPane1Layout);
        jDesktopPane1Layout.setHorizontalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 711, Short.MAX_VALUE)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(267, 267, 267)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addGap(58, 58, 58)
                .addComponent(bt_actualizardatos)
                .addGap(53, 53, 53)
                .addComponent(bt_eliminar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(165, 165, 165))
        );
        jDesktopPane1Layout.setVerticalGroup(
            jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDesktopPane1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txt_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jDesktopPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(bt_actualizardatos)
                        .addComponent(bt_eliminar)))
                .addContainerGap(33, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jDesktopPane1, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        getAccessibleContext().setAccessibleParent(this);

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void limpiarDatos() {
        usuarios vr=new usuarios();
        vr.limpiarDatos();
       
    }
    public void cargarDatos() {

        String sql = ("SELECT id,Apellidos,nombres,valor_PH,horas_T,estado_c,fecha_registro,(valor_PH*horas_T) as sueldo_b,((valor_PH*horas_T)-((valor_PH*horas_T)*0.13))"
                    +", Case When estado_c = 'C' Then(horas_T*valor_PH)+(horas_T*valor_PH*0.07) When estado_c = 'S' Then(horas_T*valor_PH) End "
                    + "FROM user_master");

        DefaultTableModel modelo = (DefaultTableModel) tb_registros.getModel();
        modelo.setRowCount(0); // Reiniciar el indice de la lista en 0

        PreparedStatement pstmt;
        ResultSet rs;
        ResultSetMetaData rsmd;
        int columnas;
        int [] anchos = {6,20,20,20,20,20,20,20,20,20};
        
        for (int i = 0; i < tb_registros.getColumnCount(); i++) {
                tb_registros.getColumnModel().getColumn(i).setPreferredWidth(10);
        }
       

        try {
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/sistemausuarios","root","");
            pstmt = con.prepareStatement(sql, ResultSet.TYPE_SCROLL_INSENSITIVE, ResultSet.CONCUR_READ_ONLY);
            rs = pstmt.executeQuery();
            rsmd = rs.getMetaData();
            columnas = rsmd.getColumnCount();

            while (rs.next()) {
                Object[] columna = new Object[columnas];                

                for (int i = 0; i < columnas; i++) {
                    columna[i] = rs.getObject(i + 1);
                }

                modelo.addRow(columna);
            }
        } catch (SQLException e) {
            System.err.println("Hubo un error en la base de datos" + e);
        }
    }
    private void bt_actualizardatosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_actualizardatosActionPerformed
        try {
            DefaultTableModel modelo = (DefaultTableModel)tb_registros.getModel();
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost/sistemausuarios","root","");
            Statement stmt = con.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT id,Apellidos,nombres,valor_PH,horas_T,estado_c,fecha_registro,(valor_PH*horas_T) as sueldo_b,((valor_PH*horas_T)-((valor_PH*horas_T)*0.13))"
                    +", Case When estado_c = 'C' Then(horas_T*valor_PH)+(horas_T*valor_PH*0.07) When estado_c = 'S' Then(horas_T*valor_PH) End "
                    + "FROM user_master");
            
            rs.first();
            txt_id.setText(rs.getString("id"));
            do{
                String[] fila ={rs.getString(1),rs.getString(2),rs.getString(3),rs.getString(4),rs.getString(5),rs.getString(6),rs.getString(7),rs.getString(8),rs.getString(9),rs.getString(10)  };
                
                modelo.addRow(fila);
            }while(rs.next());
        } catch (SQLException ex) {
            Logger.getLogger(ver_Registros.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_bt_actualizardatosActionPerformed

    private void bt_eliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_eliminarActionPerformed
        
        PreparedStatement ps =null;
        
        int numfila =tb_registros.getSelectedRow();
        if(numfila<0){
            JOptionPane.showMessageDialog(null, "No ha seleccionado ninguna fila..");
        }else{
 

                try {
                      DefaultTableModel modelo = (DefaultTableModel)tb_registros.getModel();
                      Connection con = DriverManager.getConnection("jdbc:mysql://localhost/sistemausuarios","root","");    
                      int fila = tb_registros.getSelectedRow();
                      String codigo = tb_registros.getValueAt(fila,0).toString();
                      PreparedStatement pstmt = con.prepareStatement("DELETE FROM user_master WHERE id=?");
                      pstmt.setInt(1, Integer.parseInt(txt_id.getText()));            
                      int res=pstmt.executeUpdate();

                      modelo.removeRow(fila);
                      JOptionPane.showMessageDialog(null, "Eliminacion exitosa!!");


                }catch (SQLException e) {
                      JOptionPane.showMessageDialog(null, "Hubo un error en la eliminacion...");
                }
        }
        
        
      
        
        
        try {
              DefaultTableModel modelo = (DefaultTableModel)tb_registros.getModel();
              Connection con = DriverManager.getConnection("jdbc:mysql://localhost/sistemausuarios","root","");    
              int fila = tb_registros.getSelectedRow();
              String codigo = tb_registros.getValueAt(fila,0).toString();
              PreparedStatement pstmt = con.prepareStatement("DELETE FROM user_master WHERE id=?");
              pstmt.setInt(1, Integer.parseInt(txt_id.getText()));            
              int res=pstmt.executeUpdate();
              
              modelo.removeRow(fila);
              JOptionPane.showMessageDialog(null, "Eliminacion exitosa!!");
              
              
        }catch (SQLException e) {
              JOptionPane.showMessageDialog(null, "Hubo un error en la eliminacion...");
        }
        
                  
       
        
        

        

       
    }//GEN-LAST:event_bt_eliminarActionPerformed

    private void txt_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_idActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_actualizardatos;
    private javax.swing.JButton bt_eliminar;
    private javax.swing.JDesktopPane jDesktopPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tb_registros;
    private javax.swing.JTextField txt_id;
    // End of variables declaration//GEN-END:variables
}
